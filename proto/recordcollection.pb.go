// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recordcollection.proto

package recordcollection

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import godiscogs "github.com/brotherlogic/godiscogs"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Purgatory int32

const (
	Purgatory_UNKNOWN           Purgatory = 0
	Purgatory_NO_GOAL_FOLDER    Purgatory = 1
	Purgatory_NEEDS_STOCK_CHECK Purgatory = 2
	Purgatory_NEEDS_LABELS      Purgatory = 4
	Purgatory_NEEDS_RIP         Purgatory = 5
	Purgatory_ALL_GOOD          Purgatory = 3
)

var Purgatory_name = map[int32]string{
	0: "UNKNOWN",
	1: "NO_GOAL_FOLDER",
	2: "NEEDS_STOCK_CHECK",
	4: "NEEDS_LABELS",
	5: "NEEDS_RIP",
	3: "ALL_GOOD",
}
var Purgatory_value = map[string]int32{
	"UNKNOWN":           0,
	"NO_GOAL_FOLDER":    1,
	"NEEDS_STOCK_CHECK": 2,
	"NEEDS_LABELS":      4,
	"NEEDS_RIP":         5,
	"ALL_GOOD":          3,
}

func (x Purgatory) String() string {
	return proto.EnumName(Purgatory_name, int32(x))
}
func (Purgatory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{0}
}

type ReleaseMetadata_Category int32

const (
	ReleaseMetadata_UNKNOWN         ReleaseMetadata_Category = 0
	ReleaseMetadata_PURCHASED       ReleaseMetadata_Category = 1
	ReleaseMetadata_UNLISTENED      ReleaseMetadata_Category = 2
	ReleaseMetadata_STAGED          ReleaseMetadata_Category = 3
	ReleaseMetadata_PRE_FRESHMAN    ReleaseMetadata_Category = 4
	ReleaseMetadata_FRESHMAN        ReleaseMetadata_Category = 5
	ReleaseMetadata_PRE_SOPHMORE    ReleaseMetadata_Category = 12
	ReleaseMetadata_SOPHMORE        ReleaseMetadata_Category = 13
	ReleaseMetadata_PRE_GRADUATE    ReleaseMetadata_Category = 10
	ReleaseMetadata_GRADUATE        ReleaseMetadata_Category = 11
	ReleaseMetadata_PRE_POSTDOC     ReleaseMetadata_Category = 8
	ReleaseMetadata_POSTDOC         ReleaseMetadata_Category = 9
	ReleaseMetadata_PRE_PROFESSOR   ReleaseMetadata_Category = 6
	ReleaseMetadata_PROFESSOR       ReleaseMetadata_Category = 7
	ReleaseMetadata_PREPARE_TO_SELL ReleaseMetadata_Category = 19
	ReleaseMetadata_STAGED_TO_SELL  ReleaseMetadata_Category = 14
	ReleaseMetadata_RIP_THEN_SELL   ReleaseMetadata_Category = 21
	ReleaseMetadata_SOLD            ReleaseMetadata_Category = 15
	ReleaseMetadata_DIGITAL         ReleaseMetadata_Category = 16
	ReleaseMetadata_GOOGLE_PLAY     ReleaseMetadata_Category = 18
	ReleaseMetadata_ASSESS          ReleaseMetadata_Category = 17
	ReleaseMetadata_NO_LABELS       ReleaseMetadata_Category = 20
)

var ReleaseMetadata_Category_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "PURCHASED",
	2:  "UNLISTENED",
	3:  "STAGED",
	4:  "PRE_FRESHMAN",
	5:  "FRESHMAN",
	12: "PRE_SOPHMORE",
	13: "SOPHMORE",
	10: "PRE_GRADUATE",
	11: "GRADUATE",
	8:  "PRE_POSTDOC",
	9:  "POSTDOC",
	6:  "PRE_PROFESSOR",
	7:  "PROFESSOR",
	19: "PREPARE_TO_SELL",
	14: "STAGED_TO_SELL",
	21: "RIP_THEN_SELL",
	15: "SOLD",
	16: "DIGITAL",
	18: "GOOGLE_PLAY",
	17: "ASSESS",
	20: "NO_LABELS",
}
var ReleaseMetadata_Category_value = map[string]int32{
	"UNKNOWN":         0,
	"PURCHASED":       1,
	"UNLISTENED":      2,
	"STAGED":          3,
	"PRE_FRESHMAN":    4,
	"FRESHMAN":        5,
	"PRE_SOPHMORE":    12,
	"SOPHMORE":        13,
	"PRE_GRADUATE":    10,
	"GRADUATE":        11,
	"PRE_POSTDOC":     8,
	"POSTDOC":         9,
	"PRE_PROFESSOR":   6,
	"PROFESSOR":       7,
	"PREPARE_TO_SELL": 19,
	"STAGED_TO_SELL":  14,
	"RIP_THEN_SELL":   21,
	"SOLD":            15,
	"DIGITAL":         16,
	"GOOGLE_PLAY":     18,
	"ASSESS":          17,
	"NO_LABELS":       20,
}

func (x ReleaseMetadata_Category) String() string {
	return proto.EnumName(ReleaseMetadata_Category_name, int32(x))
}
func (ReleaseMetadata_Category) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{5, 0}
}

type RecordCollection struct {
	Records              []*Record            `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Wants                []*godiscogs.Release `protobuf:"bytes,2,rep,name=wants,proto3" json:"wants,omitempty"`
	NewWants             []*Want              `protobuf:"bytes,3,rep,name=new_wants,json=newWants,proto3" json:"new_wants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RecordCollection) Reset()         { *m = RecordCollection{} }
func (m *RecordCollection) String() string { return proto.CompactTextString(m) }
func (*RecordCollection) ProtoMessage()    {}
func (*RecordCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{0}
}
func (m *RecordCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordCollection.Unmarshal(m, b)
}
func (m *RecordCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordCollection.Marshal(b, m, deterministic)
}
func (dst *RecordCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordCollection.Merge(dst, src)
}
func (m *RecordCollection) XXX_Size() int {
	return xxx_messageInfo_RecordCollection.Size(m)
}
func (m *RecordCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordCollection.DiscardUnknown(m)
}

var xxx_messageInfo_RecordCollection proto.InternalMessageInfo

func (m *RecordCollection) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *RecordCollection) GetWants() []*godiscogs.Release {
	if m != nil {
		return m.Wants
	}
	return nil
}

func (m *RecordCollection) GetNewWants() []*Want {
	if m != nil {
		return m.NewWants
	}
	return nil
}

// This is a record that we own
type Record struct {
	Release              *godiscogs.Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	Metadata             *ReleaseMetadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{1}
}
func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (dst *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(dst, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetRelease() *godiscogs.Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Record) GetMetadata() *ReleaseMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Want struct {
	Release  *godiscogs.Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	Metadata *WantMetadata      `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Delete this want
	ClearWant            bool     `protobuf:"varint,3,opt,name=clear_want,json=clearWant,proto3" json:"clear_want,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Want) Reset()         { *m = Want{} }
func (m *Want) String() string { return proto.CompactTextString(m) }
func (*Want) ProtoMessage()    {}
func (*Want) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{2}
}
func (m *Want) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Want.Unmarshal(m, b)
}
func (m *Want) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Want.Marshal(b, m, deterministic)
}
func (dst *Want) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Want.Merge(dst, src)
}
func (m *Want) XXX_Size() int {
	return xxx_messageInfo_Want.Size(m)
}
func (m *Want) XXX_DiscardUnknown() {
	xxx_messageInfo_Want.DiscardUnknown(m)
}

var xxx_messageInfo_Want proto.InternalMessageInfo

func (m *Want) GetRelease() *godiscogs.Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Want) GetMetadata() *WantMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Want) GetClearWant() bool {
	if m != nil {
		return m.ClearWant
	}
	return false
}

type WantMetadata struct {
	Active               bool     `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WantMetadata) Reset()         { *m = WantMetadata{} }
func (m *WantMetadata) String() string { return proto.CompactTextString(m) }
func (*WantMetadata) ProtoMessage()    {}
func (*WantMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{3}
}
func (m *WantMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WantMetadata.Unmarshal(m, b)
}
func (m *WantMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WantMetadata.Marshal(b, m, deterministic)
}
func (dst *WantMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WantMetadata.Merge(dst, src)
}
func (m *WantMetadata) XXX_Size() int {
	return xxx_messageInfo_WantMetadata.Size(m)
}
func (m *WantMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_WantMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_WantMetadata proto.InternalMessageInfo

func (m *WantMetadata) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

// This is the discogs token
type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{4}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ReleaseMetadata struct {
	// The date the release was added
	DateAdded int64 `protobuf:"varint,1,opt,name=date_added,json=dateAdded,proto3" json:"date_added,omitempty"`
	// The date the release was last updated
	DateUpdated int64 `protobuf:"varint,2,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
	// The relative path to the release
	FilePath string `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	// The cost of the record in cents
	Cost int32 `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
	// If we have other copies of this
	Others bool `protobuf:"varint,5,opt,name=others,proto3" json:"others,omitempty"`
	// The id of the release this relates to
	Id int32 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	// The data we last recached this release
	LastCache int64                    `protobuf:"varint,7,opt,name=last_cache,json=lastCache,proto3" json:"last_cache,omitempty"`
	Category  ReleaseMetadata_Category `protobuf:"varint,8,opt,name=category,proto3,enum=recordcollection.ReleaseMetadata_Category" json:"category,omitempty"`
	// The folder this record should be placed in
	GoalFolder int32 `protobuf:"varint,9,opt,name=goal_folder,json=goalFolder,proto3" json:"goal_folder,omitempty"`
	// If a record is dirty, it needs to send updates to discogs
	Dirty bool `protobuf:"varint,10,opt,name=dirty,proto3" json:"dirty,omitempty"`
	// The folder this record should move to
	MoveFolder int32 `protobuf:"varint,11,opt,name=move_folder,json=moveFolder,proto3" json:"move_folder,omitempty"`
	// This is the rating that should be set on the record
	SetRating int32 `protobuf:"varint,12,opt,name=set_rating,json=setRating,proto3" json:"set_rating,omitempty"`
	// The time we were last Synced
	LastSyncTime int64     `protobuf:"varint,13,opt,name=last_sync_time,json=lastSyncTime,proto3" json:"last_sync_time,omitempty"`
	Purgatory    Purgatory `protobuf:"varint,14,opt,name=purgatory,proto3,enum=recordcollection.Purgatory" json:"purgatory,omitempty"`
	// The last time we did a stock check
	LastStockCheck int64 `protobuf:"varint,15,opt,name=last_stock_check,json=lastStockCheck,proto3" json:"last_stock_check,omitempty"`
	// This is an overall score
	OverallScore float32 `protobuf:"fixed32,16,opt,name=overall_score,json=overallScore,proto3" json:"overall_score,omitempty"`
	// Width of spine in mm
	SpineWidth           int32    `protobuf:"varint,17,opt,name=spine_width,json=spineWidth,proto3" json:"spine_width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseMetadata) Reset()         { *m = ReleaseMetadata{} }
func (m *ReleaseMetadata) String() string { return proto.CompactTextString(m) }
func (*ReleaseMetadata) ProtoMessage()    {}
func (*ReleaseMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{5}
}
func (m *ReleaseMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseMetadata.Unmarshal(m, b)
}
func (m *ReleaseMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseMetadata.Marshal(b, m, deterministic)
}
func (dst *ReleaseMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseMetadata.Merge(dst, src)
}
func (m *ReleaseMetadata) XXX_Size() int {
	return xxx_messageInfo_ReleaseMetadata.Size(m)
}
func (m *ReleaseMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseMetadata proto.InternalMessageInfo

func (m *ReleaseMetadata) GetDateAdded() int64 {
	if m != nil {
		return m.DateAdded
	}
	return 0
}

func (m *ReleaseMetadata) GetDateUpdated() int64 {
	if m != nil {
		return m.DateUpdated
	}
	return 0
}

func (m *ReleaseMetadata) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *ReleaseMetadata) GetCost() int32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *ReleaseMetadata) GetOthers() bool {
	if m != nil {
		return m.Others
	}
	return false
}

func (m *ReleaseMetadata) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReleaseMetadata) GetLastCache() int64 {
	if m != nil {
		return m.LastCache
	}
	return 0
}

func (m *ReleaseMetadata) GetCategory() ReleaseMetadata_Category {
	if m != nil {
		return m.Category
	}
	return ReleaseMetadata_UNKNOWN
}

func (m *ReleaseMetadata) GetGoalFolder() int32 {
	if m != nil {
		return m.GoalFolder
	}
	return 0
}

func (m *ReleaseMetadata) GetDirty() bool {
	if m != nil {
		return m.Dirty
	}
	return false
}

func (m *ReleaseMetadata) GetMoveFolder() int32 {
	if m != nil {
		return m.MoveFolder
	}
	return 0
}

func (m *ReleaseMetadata) GetSetRating() int32 {
	if m != nil {
		return m.SetRating
	}
	return 0
}

func (m *ReleaseMetadata) GetLastSyncTime() int64 {
	if m != nil {
		return m.LastSyncTime
	}
	return 0
}

func (m *ReleaseMetadata) GetPurgatory() Purgatory {
	if m != nil {
		return m.Purgatory
	}
	return Purgatory_UNKNOWN
}

func (m *ReleaseMetadata) GetLastStockCheck() int64 {
	if m != nil {
		return m.LastStockCheck
	}
	return 0
}

func (m *ReleaseMetadata) GetOverallScore() float32 {
	if m != nil {
		return m.OverallScore
	}
	return 0
}

func (m *ReleaseMetadata) GetSpineWidth() int32 {
	if m != nil {
		return m.SpineWidth
	}
	return 0
}

// A request to get some records
type GetRecordsRequest struct {
	Filter *Record `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Forces a refresh on this record
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	// Return a stripped response
	Strip                bool     `protobuf:"varint,3,opt,name=strip,proto3" json:"strip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordsRequest) Reset()         { *m = GetRecordsRequest{} }
func (m *GetRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecordsRequest) ProtoMessage()    {}
func (*GetRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{6}
}
func (m *GetRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordsRequest.Unmarshal(m, b)
}
func (m *GetRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordsRequest.Marshal(b, m, deterministic)
}
func (dst *GetRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordsRequest.Merge(dst, src)
}
func (m *GetRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecordsRequest.Size(m)
}
func (m *GetRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordsRequest proto.InternalMessageInfo

func (m *GetRecordsRequest) GetFilter() *Record {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *GetRecordsRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *GetRecordsRequest) GetStrip() bool {
	if m != nil {
		return m.Strip
	}
	return false
}

// A list of records in response
type GetRecordsResponse struct {
	Records                []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	InternalProcessingTime int64     `protobuf:"varint,2,opt,name=internal_processing_time,json=internalProcessingTime,proto3" json:"internal_processing_time,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}  `json:"-"`
	XXX_unrecognized       []byte    `json:"-"`
	XXX_sizecache          int32     `json:"-"`
}

func (m *GetRecordsResponse) Reset()         { *m = GetRecordsResponse{} }
func (m *GetRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecordsResponse) ProtoMessage()    {}
func (*GetRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{7}
}
func (m *GetRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordsResponse.Unmarshal(m, b)
}
func (m *GetRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *GetRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordsResponse.Merge(dst, src)
}
func (m *GetRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecordsResponse.Size(m)
}
func (m *GetRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordsResponse proto.InternalMessageInfo

func (m *GetRecordsResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *GetRecordsResponse) GetInternalProcessingTime() int64 {
	if m != nil {
		return m.InternalProcessingTime
	}
	return 0
}

// A request to get some records
type GetWantsRequest struct {
	Filter               *Want    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWantsRequest) Reset()         { *m = GetWantsRequest{} }
func (m *GetWantsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWantsRequest) ProtoMessage()    {}
func (*GetWantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{8}
}
func (m *GetWantsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWantsRequest.Unmarshal(m, b)
}
func (m *GetWantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWantsRequest.Marshal(b, m, deterministic)
}
func (dst *GetWantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWantsRequest.Merge(dst, src)
}
func (m *GetWantsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWantsRequest.Size(m)
}
func (m *GetWantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWantsRequest proto.InternalMessageInfo

func (m *GetWantsRequest) GetFilter() *Want {
	if m != nil {
		return m.Filter
	}
	return nil
}

// A list of records in response
type GetWantsResponse struct {
	Wants                []*Want  `protobuf:"bytes,1,rep,name=wants,proto3" json:"wants,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWantsResponse) Reset()         { *m = GetWantsResponse{} }
func (m *GetWantsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWantsResponse) ProtoMessage()    {}
func (*GetWantsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{9}
}
func (m *GetWantsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWantsResponse.Unmarshal(m, b)
}
func (m *GetWantsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWantsResponse.Marshal(b, m, deterministic)
}
func (dst *GetWantsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWantsResponse.Merge(dst, src)
}
func (m *GetWantsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWantsResponse.Size(m)
}
func (m *GetWantsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWantsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWantsResponse proto.InternalMessageInfo

func (m *GetWantsResponse) GetWants() []*Want {
	if m != nil {
		return m.Wants
	}
	return nil
}

type UpdateRecordRequest struct {
	Update               *Record  `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	Requestor            string   `protobuf:"bytes,2,opt,name=requestor,proto3" json:"requestor,omitempty"`
	NoSell               bool     `protobuf:"varint,3,opt,name=no_sell,json=noSell,proto3" json:"no_sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRecordRequest) Reset()         { *m = UpdateRecordRequest{} }
func (m *UpdateRecordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRecordRequest) ProtoMessage()    {}
func (*UpdateRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{10}
}
func (m *UpdateRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecordRequest.Unmarshal(m, b)
}
func (m *UpdateRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecordRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecordRequest.Merge(dst, src)
}
func (m *UpdateRecordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRecordRequest.Size(m)
}
func (m *UpdateRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecordRequest proto.InternalMessageInfo

func (m *UpdateRecordRequest) GetUpdate() *Record {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateRecordRequest) GetRequestor() string {
	if m != nil {
		return m.Requestor
	}
	return ""
}

func (m *UpdateRecordRequest) GetNoSell() bool {
	if m != nil {
		return m.NoSell
	}
	return false
}

type UpdateRecordsResponse struct {
	Updated              *Record  `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRecordsResponse) Reset()         { *m = UpdateRecordsResponse{} }
func (m *UpdateRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRecordsResponse) ProtoMessage()    {}
func (*UpdateRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{11}
}
func (m *UpdateRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecordsResponse.Unmarshal(m, b)
}
func (m *UpdateRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecordsResponse.Merge(dst, src)
}
func (m *UpdateRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRecordsResponse.Size(m)
}
func (m *UpdateRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecordsResponse proto.InternalMessageInfo

func (m *UpdateRecordsResponse) GetUpdated() *Record {
	if m != nil {
		return m.Updated
	}
	return nil
}

type UpdateWantRequest struct {
	Update               *Want    `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	Remove               bool     `protobuf:"varint,2,opt,name=remove,proto3" json:"remove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWantRequest) Reset()         { *m = UpdateWantRequest{} }
func (m *UpdateWantRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWantRequest) ProtoMessage()    {}
func (*UpdateWantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{12}
}
func (m *UpdateWantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWantRequest.Unmarshal(m, b)
}
func (m *UpdateWantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWantRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateWantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWantRequest.Merge(dst, src)
}
func (m *UpdateWantRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWantRequest.Size(m)
}
func (m *UpdateWantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWantRequest proto.InternalMessageInfo

func (m *UpdateWantRequest) GetUpdate() *Want {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateWantRequest) GetRemove() bool {
	if m != nil {
		return m.Remove
	}
	return false
}

type UpdateWantResponse struct {
	Updated              *Want    `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWantResponse) Reset()         { *m = UpdateWantResponse{} }
func (m *UpdateWantResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateWantResponse) ProtoMessage()    {}
func (*UpdateWantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{13}
}
func (m *UpdateWantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWantResponse.Unmarshal(m, b)
}
func (m *UpdateWantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWantResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateWantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWantResponse.Merge(dst, src)
}
func (m *UpdateWantResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateWantResponse.Size(m)
}
func (m *UpdateWantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWantResponse proto.InternalMessageInfo

func (m *UpdateWantResponse) GetUpdated() *Want {
	if m != nil {
		return m.Updated
	}
	return nil
}

type AddRecordRequest struct {
	ToAdd                *Record  `protobuf:"bytes,1,opt,name=to_add,json=toAdd,proto3" json:"to_add,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRecordRequest) Reset()         { *m = AddRecordRequest{} }
func (m *AddRecordRequest) String() string { return proto.CompactTextString(m) }
func (*AddRecordRequest) ProtoMessage()    {}
func (*AddRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{14}
}
func (m *AddRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRecordRequest.Unmarshal(m, b)
}
func (m *AddRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRecordRequest.Marshal(b, m, deterministic)
}
func (dst *AddRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRecordRequest.Merge(dst, src)
}
func (m *AddRecordRequest) XXX_Size() int {
	return xxx_messageInfo_AddRecordRequest.Size(m)
}
func (m *AddRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRecordRequest proto.InternalMessageInfo

func (m *AddRecordRequest) GetToAdd() *Record {
	if m != nil {
		return m.ToAdd
	}
	return nil
}

type AddRecordResponse struct {
	Added                *Record  `protobuf:"bytes,2,opt,name=added,proto3" json:"added,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRecordResponse) Reset()         { *m = AddRecordResponse{} }
func (m *AddRecordResponse) String() string { return proto.CompactTextString(m) }
func (*AddRecordResponse) ProtoMessage()    {}
func (*AddRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{15}
}
func (m *AddRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRecordResponse.Unmarshal(m, b)
}
func (m *AddRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRecordResponse.Marshal(b, m, deterministic)
}
func (dst *AddRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRecordResponse.Merge(dst, src)
}
func (m *AddRecordResponse) XXX_Size() int {
	return xxx_messageInfo_AddRecordResponse.Size(m)
}
func (m *AddRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddRecordResponse proto.InternalMessageInfo

func (m *AddRecordResponse) GetAdded() *Record {
	if m != nil {
		return m.Added
	}
	return nil
}

type GetRecordCollectionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordCollectionRequest) Reset()         { *m = GetRecordCollectionRequest{} }
func (m *GetRecordCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecordCollectionRequest) ProtoMessage()    {}
func (*GetRecordCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{16}
}
func (m *GetRecordCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordCollectionRequest.Unmarshal(m, b)
}
func (m *GetRecordCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordCollectionRequest.Marshal(b, m, deterministic)
}
func (dst *GetRecordCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordCollectionRequest.Merge(dst, src)
}
func (m *GetRecordCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecordCollectionRequest.Size(m)
}
func (m *GetRecordCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordCollectionRequest proto.InternalMessageInfo

type GetRecordCollectionResponse struct {
	InstanceIds          []int32  `protobuf:"varint,1,rep,packed,name=instance_ids,json=instanceIds,proto3" json:"instance_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordCollectionResponse) Reset()         { *m = GetRecordCollectionResponse{} }
func (m *GetRecordCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecordCollectionResponse) ProtoMessage()    {}
func (*GetRecordCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{17}
}
func (m *GetRecordCollectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordCollectionResponse.Unmarshal(m, b)
}
func (m *GetRecordCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordCollectionResponse.Marshal(b, m, deterministic)
}
func (dst *GetRecordCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordCollectionResponse.Merge(dst, src)
}
func (m *GetRecordCollectionResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecordCollectionResponse.Size(m)
}
func (m *GetRecordCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordCollectionResponse proto.InternalMessageInfo

func (m *GetRecordCollectionResponse) GetInstanceIds() []int32 {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

type DeleteRecordRequest struct {
	InstanceId           int32    `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRecordRequest) Reset()         { *m = DeleteRecordRequest{} }
func (m *DeleteRecordRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRecordRequest) ProtoMessage()    {}
func (*DeleteRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{18}
}
func (m *DeleteRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRecordRequest.Unmarshal(m, b)
}
func (m *DeleteRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRecordRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRecordRequest.Merge(dst, src)
}
func (m *DeleteRecordRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRecordRequest.Size(m)
}
func (m *DeleteRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRecordRequest proto.InternalMessageInfo

func (m *DeleteRecordRequest) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

type DeleteRecordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRecordResponse) Reset()         { *m = DeleteRecordResponse{} }
func (m *DeleteRecordResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRecordResponse) ProtoMessage()    {}
func (*DeleteRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recordcollection_6096f2b8aa6dade1, []int{19}
}
func (m *DeleteRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRecordResponse.Unmarshal(m, b)
}
func (m *DeleteRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRecordResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRecordResponse.Merge(dst, src)
}
func (m *DeleteRecordResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRecordResponse.Size(m)
}
func (m *DeleteRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRecordResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RecordCollection)(nil), "recordcollection.RecordCollection")
	proto.RegisterType((*Record)(nil), "recordcollection.Record")
	proto.RegisterType((*Want)(nil), "recordcollection.Want")
	proto.RegisterType((*WantMetadata)(nil), "recordcollection.WantMetadata")
	proto.RegisterType((*Token)(nil), "recordcollection.Token")
	proto.RegisterType((*ReleaseMetadata)(nil), "recordcollection.ReleaseMetadata")
	proto.RegisterType((*GetRecordsRequest)(nil), "recordcollection.GetRecordsRequest")
	proto.RegisterType((*GetRecordsResponse)(nil), "recordcollection.GetRecordsResponse")
	proto.RegisterType((*GetWantsRequest)(nil), "recordcollection.GetWantsRequest")
	proto.RegisterType((*GetWantsResponse)(nil), "recordcollection.GetWantsResponse")
	proto.RegisterType((*UpdateRecordRequest)(nil), "recordcollection.UpdateRecordRequest")
	proto.RegisterType((*UpdateRecordsResponse)(nil), "recordcollection.UpdateRecordsResponse")
	proto.RegisterType((*UpdateWantRequest)(nil), "recordcollection.UpdateWantRequest")
	proto.RegisterType((*UpdateWantResponse)(nil), "recordcollection.UpdateWantResponse")
	proto.RegisterType((*AddRecordRequest)(nil), "recordcollection.AddRecordRequest")
	proto.RegisterType((*AddRecordResponse)(nil), "recordcollection.AddRecordResponse")
	proto.RegisterType((*GetRecordCollectionRequest)(nil), "recordcollection.GetRecordCollectionRequest")
	proto.RegisterType((*GetRecordCollectionResponse)(nil), "recordcollection.GetRecordCollectionResponse")
	proto.RegisterType((*DeleteRecordRequest)(nil), "recordcollection.DeleteRecordRequest")
	proto.RegisterType((*DeleteRecordResponse)(nil), "recordcollection.DeleteRecordResponse")
	proto.RegisterEnum("recordcollection.Purgatory", Purgatory_name, Purgatory_value)
	proto.RegisterEnum("recordcollection.ReleaseMetadata_Category", ReleaseMetadata_Category_name, ReleaseMetadata_Category_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecordCollectionServiceClient is the client API for RecordCollectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordCollectionServiceClient interface {
	GetRecords(ctx context.Context, in *GetRecordsRequest, opts ...grpc.CallOption) (*GetRecordsResponse, error)
	GetWants(ctx context.Context, in *GetWantsRequest, opts ...grpc.CallOption) (*GetWantsResponse, error)
	UpdateRecord(ctx context.Context, in *UpdateRecordRequest, opts ...grpc.CallOption) (*UpdateRecordsResponse, error)
	UpdateWant(ctx context.Context, in *UpdateWantRequest, opts ...grpc.CallOption) (*UpdateWantResponse, error)
	AddRecord(ctx context.Context, in *AddRecordRequest, opts ...grpc.CallOption) (*AddRecordResponse, error)
	GetRecordCollection(ctx context.Context, in *GetRecordCollectionRequest, opts ...grpc.CallOption) (*GetRecordCollectionResponse, error)
	DeleteRecord(ctx context.Context, in *DeleteRecordRequest, opts ...grpc.CallOption) (*DeleteRecordResponse, error)
}

type recordCollectionServiceClient struct {
	cc *grpc.ClientConn
}

func NewRecordCollectionServiceClient(cc *grpc.ClientConn) RecordCollectionServiceClient {
	return &recordCollectionServiceClient{cc}
}

func (c *recordCollectionServiceClient) GetRecords(ctx context.Context, in *GetRecordsRequest, opts ...grpc.CallOption) (*GetRecordsResponse, error) {
	out := new(GetRecordsResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/GetRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recordCollectionServiceClient) GetWants(ctx context.Context, in *GetWantsRequest, opts ...grpc.CallOption) (*GetWantsResponse, error) {
	out := new(GetWantsResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/GetWants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recordCollectionServiceClient) UpdateRecord(ctx context.Context, in *UpdateRecordRequest, opts ...grpc.CallOption) (*UpdateRecordsResponse, error) {
	out := new(UpdateRecordsResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/UpdateRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recordCollectionServiceClient) UpdateWant(ctx context.Context, in *UpdateWantRequest, opts ...grpc.CallOption) (*UpdateWantResponse, error) {
	out := new(UpdateWantResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/UpdateWant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recordCollectionServiceClient) AddRecord(ctx context.Context, in *AddRecordRequest, opts ...grpc.CallOption) (*AddRecordResponse, error) {
	out := new(AddRecordResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/AddRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recordCollectionServiceClient) GetRecordCollection(ctx context.Context, in *GetRecordCollectionRequest, opts ...grpc.CallOption) (*GetRecordCollectionResponse, error) {
	out := new(GetRecordCollectionResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/GetRecordCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recordCollectionServiceClient) DeleteRecord(ctx context.Context, in *DeleteRecordRequest, opts ...grpc.CallOption) (*DeleteRecordResponse, error) {
	out := new(DeleteRecordResponse)
	err := c.cc.Invoke(ctx, "/recordcollection.RecordCollectionService/DeleteRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordCollectionServiceServer is the server API for RecordCollectionService service.
type RecordCollectionServiceServer interface {
	GetRecords(context.Context, *GetRecordsRequest) (*GetRecordsResponse, error)
	GetWants(context.Context, *GetWantsRequest) (*GetWantsResponse, error)
	UpdateRecord(context.Context, *UpdateRecordRequest) (*UpdateRecordsResponse, error)
	UpdateWant(context.Context, *UpdateWantRequest) (*UpdateWantResponse, error)
	AddRecord(context.Context, *AddRecordRequest) (*AddRecordResponse, error)
	GetRecordCollection(context.Context, *GetRecordCollectionRequest) (*GetRecordCollectionResponse, error)
	DeleteRecord(context.Context, *DeleteRecordRequest) (*DeleteRecordResponse, error)
}

func RegisterRecordCollectionServiceServer(s *grpc.Server, srv RecordCollectionServiceServer) {
	s.RegisterService(&_RecordCollectionService_serviceDesc, srv)
}

func _RecordCollectionService_GetRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).GetRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/GetRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).GetRecords(ctx, req.(*GetRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecordCollectionService_GetWants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).GetWants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/GetWants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).GetWants(ctx, req.(*GetWantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecordCollectionService_UpdateRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).UpdateRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/UpdateRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).UpdateRecord(ctx, req.(*UpdateRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecordCollectionService_UpdateWant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).UpdateWant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/UpdateWant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).UpdateWant(ctx, req.(*UpdateWantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecordCollectionService_AddRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).AddRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/AddRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).AddRecord(ctx, req.(*AddRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecordCollectionService_GetRecordCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecordCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).GetRecordCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/GetRecordCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).GetRecordCollection(ctx, req.(*GetRecordCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecordCollectionService_DeleteRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordCollectionServiceServer).DeleteRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordcollection.RecordCollectionService/DeleteRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordCollectionServiceServer).DeleteRecord(ctx, req.(*DeleteRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordCollectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recordcollection.RecordCollectionService",
	HandlerType: (*RecordCollectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRecords",
			Handler:    _RecordCollectionService_GetRecords_Handler,
		},
		{
			MethodName: "GetWants",
			Handler:    _RecordCollectionService_GetWants_Handler,
		},
		{
			MethodName: "UpdateRecord",
			Handler:    _RecordCollectionService_UpdateRecord_Handler,
		},
		{
			MethodName: "UpdateWant",
			Handler:    _RecordCollectionService_UpdateWant_Handler,
		},
		{
			MethodName: "AddRecord",
			Handler:    _RecordCollectionService_AddRecord_Handler,
		},
		{
			MethodName: "GetRecordCollection",
			Handler:    _RecordCollectionService_GetRecordCollection_Handler,
		},
		{
			MethodName: "DeleteRecord",
			Handler:    _RecordCollectionService_DeleteRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recordcollection.proto",
}

func init() {
	proto.RegisterFile("recordcollection.proto", fileDescriptor_recordcollection_6096f2b8aa6dade1)
}

var fileDescriptor_recordcollection_6096f2b8aa6dade1 = []byte{
	// 1390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xdd, 0x6e, 0xdb, 0x46,
	0x16, 0x8e, 0x64, 0x4b, 0x16, 0x8f, 0x64, 0x99, 0x1a, 0x27, 0x0e, 0xa1, 0x24, 0x1b, 0x9b, 0xc9,
	0x66, 0x85, 0x20, 0xab, 0x64, 0x1d, 0x60, 0xd1, 0x16, 0x28, 0x10, 0x56, 0xa2, 0x65, 0xc3, 0x8a,
	0x28, 0x0c, 0xe5, 0x06, 0x41, 0x2f, 0x58, 0x86, 0x1c, 0x4b, 0x44, 0x68, 0x8e, 0x42, 0x8e, 0x6d,
	0xf8, 0xa6, 0x17, 0x7d, 0x81, 0x3e, 0x45, 0x1f, 0xa1, 0xd7, 0x7d, 0x96, 0xbe, 0x49, 0x31, 0x33,
	0x24, 0x25, 0x4b, 0xb2, 0xdd, 0xf6, 0x2a, 0x3a, 0xdf, 0x7c, 0xe7, 0xe7, 0x3b, 0x9c, 0x73, 0x26,
	0x86, 0x9d, 0x98, 0x78, 0x34, 0xf6, 0x3d, 0x1a, 0x86, 0xc4, 0x63, 0x01, 0x8d, 0xda, 0xd3, 0x98,
	0x32, 0x8a, 0xd4, 0x45, 0xbc, 0xf9, 0xbf, 0x71, 0xc0, 0x26, 0xe7, 0x9f, 0xda, 0x1e, 0x3d, 0x7b,
	0xfd, 0x29, 0xa6, 0x6c, 0x42, 0xe2, 0x90, 0x8e, 0x03, 0xef, 0xf5, 0x98, 0xfa, 0x41, 0xe2, 0xd1,
	0x71, 0x32, 0xfb, 0x25, 0x83, 0xe8, 0xbf, 0x16, 0x40, 0xc5, 0x22, 0x4e, 0x27, 0x8f, 0x83, 0xf6,
	0x61, 0x43, 0xc6, 0x4e, 0xb4, 0xc2, 0xee, 0x5a, 0xab, 0xba, 0xaf, 0xb5, 0x97, 0x6a, 0x90, 0x4e,
	0x38, 0x23, 0xa2, 0x16, 0x94, 0x2e, 0xdd, 0x88, 0x25, 0x5a, 0x51, 0x78, 0xa0, 0xf6, 0x2c, 0x13,
	0x26, 0x21, 0x71, 0x13, 0x82, 0x25, 0x01, 0xbd, 0x05, 0x25, 0x22, 0x97, 0x8e, 0x64, 0xaf, 0x09,
	0xf6, 0xce, 0x72, 0xfc, 0x0f, 0x6e, 0xc4, 0x70, 0x25, 0x22, 0x97, 0xfc, 0x47, 0xa2, 0x9f, 0x43,
	0x59, 0x66, 0x44, 0xaf, 0x78, 0x71, 0x22, 0xa0, 0x56, 0xd8, 0x2d, 0xdc, 0x90, 0x2a, 0xa3, 0xa0,
	0x6f, 0xa1, 0x72, 0x46, 0x98, 0xeb, 0xbb, 0xcc, 0xd5, 0x8a, 0x82, 0xbe, 0xb7, 0x4a, 0x8b, 0x20,
	0xbf, 0x4f, 0x89, 0x38, 0x77, 0xd1, 0x7f, 0x29, 0xc0, 0x3a, 0x2f, 0xe0, 0x6f, 0x66, 0xfd, 0x66,
	0x29, 0xeb, 0xbf, 0x56, 0x2b, 0x5c, 0x4e, 0x89, 0x9e, 0x00, 0x78, 0x21, 0x71, 0x63, 0xd1, 0x20,
	0x6d, 0x6d, 0xb7, 0xd0, 0xaa, 0x60, 0x45, 0x20, 0xdc, 0x41, 0x7f, 0x01, 0xb5, 0x79, 0x47, 0xb4,
	0x03, 0x65, 0xd7, 0x63, 0xc1, 0x85, 0xac, 0xab, 0x82, 0x53, 0x4b, 0x7f, 0x02, 0xa5, 0x11, 0xfd,
	0x4c, 0x22, 0x74, 0x1f, 0x4a, 0x8c, 0xff, 0x10, 0xe7, 0x0a, 0x96, 0x86, 0xfe, 0xfb, 0x06, 0x6c,
	0x2d, 0xc8, 0xe6, 0x99, 0x7d, 0x97, 0x11, 0xc7, 0xf5, 0x7d, 0xe2, 0x0b, 0xfa, 0x1a, 0x56, 0x38,
	0x62, 0x70, 0x00, 0xed, 0x41, 0x4d, 0x1c, 0x9f, 0x4f, 0xf9, 0x3f, 0xbe, 0x10, 0xb6, 0x86, 0xab,
	0xdc, 0x38, 0x91, 0x10, 0x7a, 0x04, 0xca, 0x69, 0x10, 0x12, 0x67, 0xea, 0xb2, 0x89, 0x28, 0x5d,
	0xc1, 0x15, 0x0e, 0x0c, 0x5d, 0x36, 0x41, 0x08, 0xd6, 0x3d, 0x9a, 0x30, 0x6d, 0x7d, 0xb7, 0xd0,
	0x2a, 0x61, 0xf1, 0x9b, 0x57, 0x2f, 0xae, 0x69, 0xa2, 0x95, 0x64, 0xf5, 0xd2, 0x42, 0x75, 0x28,
	0x06, 0xbe, 0x56, 0x16, 0xcc, 0x62, 0xe0, 0xf3, 0xd2, 0x42, 0x37, 0x61, 0x8e, 0xe7, 0x7a, 0x13,
	0xa2, 0x6d, 0xc8, 0xd2, 0x38, 0xd2, 0xe1, 0x00, 0x3a, 0x80, 0x8a, 0xe7, 0x32, 0x32, 0xa6, 0xf1,
	0x95, 0x56, 0xd9, 0x2d, 0xb4, 0xea, 0xfb, 0x2f, 0xef, 0xfc, 0xca, 0xed, 0x4e, 0xea, 0x81, 0x73,
	0x5f, 0xf4, 0x14, 0xaa, 0x63, 0xea, 0x86, 0xce, 0x29, 0x0d, 0x7d, 0x12, 0x6b, 0x8a, 0xc8, 0x0f,
	0x1c, 0x3a, 0x10, 0x08, 0x6f, 0xa6, 0x1f, 0xc4, 0xec, 0x4a, 0x03, 0x51, 0xae, 0x34, 0xb8, 0xdb,
	0x19, 0xbd, 0x20, 0x99, 0x5b, 0x55, 0xba, 0x71, 0x28, 0x75, 0x7b, 0x02, 0x90, 0x10, 0xe6, 0xc4,
	0x2e, 0x0b, 0xa2, 0xb1, 0x56, 0x13, 0xe7, 0x4a, 0x42, 0x18, 0x16, 0x00, 0x7a, 0x0e, 0x75, 0xa1,
	0x2e, 0xb9, 0x8a, 0x3c, 0x87, 0x05, 0x67, 0x44, 0xdb, 0x14, 0x0a, 0x6b, 0x1c, 0xb5, 0xaf, 0x22,
	0x6f, 0x14, 0x9c, 0x11, 0xf4, 0x35, 0x28, 0xd3, 0xf3, 0x78, 0xec, 0x32, 0xae, 0xb2, 0x2e, 0x54,
	0x3e, 0x5a, 0x56, 0x39, 0xcc, 0x28, 0x78, 0xc6, 0x46, 0x2d, 0x50, 0x65, 0x02, 0x46, 0xbd, 0xcf,
	0x8e, 0x37, 0x21, 0xde, 0x67, 0x6d, 0x4b, 0xa4, 0x10, 0x89, 0x6d, 0x0e, 0x77, 0x38, 0x8a, 0x9e,
	0xc1, 0x26, 0xbd, 0x20, 0xb1, 0x1b, 0x86, 0x4e, 0xe2, 0xd1, 0x98, 0x68, 0xea, 0x6e, 0xa1, 0x55,
	0xc4, 0xb5, 0x14, 0xb4, 0x39, 0xc6, 0xf5, 0x26, 0xd3, 0x20, 0x22, 0xce, 0x65, 0xe0, 0xb3, 0x89,
	0xd6, 0x90, 0x7a, 0x05, 0xf4, 0x81, 0x23, 0xfa, 0x1f, 0x45, 0xa8, 0x64, 0xed, 0x45, 0x55, 0xd8,
	0x38, 0x19, 0x1c, 0x0f, 0xac, 0x0f, 0x03, 0xf5, 0x1e, 0xda, 0x04, 0x65, 0x78, 0x82, 0x3b, 0x87,
	0x86, 0x6d, 0x76, 0xd5, 0x02, 0xaa, 0x03, 0x9c, 0x0c, 0xfa, 0x47, 0xf6, 0xc8, 0x1c, 0x98, 0x5d,
	0xb5, 0x88, 0x00, 0xca, 0xf6, 0xc8, 0xe8, 0x99, 0x5d, 0x75, 0x0d, 0xa9, 0x50, 0x1b, 0x62, 0xd3,
	0x39, 0xc0, 0xa6, 0x7d, 0xf8, 0xde, 0x18, 0xa8, 0xeb, 0xa8, 0x06, 0x95, 0xdc, 0x2a, 0x65, 0xe7,
	0xb6, 0x35, 0x3c, 0x7c, 0x6f, 0x61, 0x53, 0xad, 0xf1, 0xf3, 0xdc, 0xda, 0xcc, 0xce, 0x7b, 0xd8,
	0xe8, 0x9e, 0x18, 0x23, 0x53, 0x05, 0x7e, 0x9e, 0x5b, 0x55, 0xb4, 0x05, 0x55, 0x7e, 0x3e, 0xb4,
	0xec, 0x51, 0xd7, 0xea, 0xa8, 0x15, 0x5e, 0x68, 0x66, 0x28, 0xa8, 0x01, 0x9b, 0xe2, 0x14, 0x5b,
	0x07, 0xa6, 0x6d, 0x5b, 0x58, 0x2d, 0x8b, 0xda, 0x73, 0x73, 0x03, 0x6d, 0xc3, 0xd6, 0x10, 0x9b,
	0x43, 0x03, 0x9b, 0xce, 0xc8, 0x72, 0x6c, 0xb3, 0xdf, 0x57, 0xb7, 0x11, 0x82, 0xba, 0x14, 0x90,
	0x63, 0x75, 0x1e, 0x0a, 0x1f, 0x0d, 0x9d, 0xd1, 0xa1, 0x39, 0x90, 0xd0, 0x03, 0x54, 0x81, 0x75,
	0xdb, 0xea, 0x77, 0xd5, 0x2d, 0x9e, 0xb4, 0x7b, 0xd4, 0x3b, 0x1a, 0x19, 0x7d, 0x55, 0xe5, 0x25,
	0xf5, 0x2c, 0xab, 0xd7, 0x37, 0x9d, 0x61, 0xdf, 0xf8, 0xa8, 0x22, 0xde, 0x0f, 0xc3, 0xb6, 0x4d,
	0xdb, 0x56, 0x1b, 0x3c, 0xfd, 0xc0, 0x72, 0xfa, 0xc6, 0x77, 0x66, 0xdf, 0x56, 0xef, 0xeb, 0x5f,
	0xa0, 0xd1, 0x23, 0x4c, 0x2e, 0xc5, 0x04, 0x93, 0x2f, 0xe7, 0x24, 0x61, 0xe8, 0x0d, 0x94, 0x4f,
	0x83, 0x90, 0x91, 0x38, 0xdd, 0x52, 0x37, 0x2f, 0xee, 0x94, 0xc7, 0x6f, 0xf4, 0x29, 0x8d, 0x3d,
	0x22, 0xc6, 0xb9, 0x82, 0xa5, 0xc1, 0xd1, 0x84, 0xc5, 0xc1, 0x34, 0xdd, 0x3f, 0xd2, 0xd0, 0x7f,
	0x2e, 0x00, 0x9a, 0xcf, 0x99, 0x4c, 0x69, 0x94, 0x90, 0x7f, 0xf4, 0x5c, 0x7c, 0x05, 0x5a, 0x10,
	0x31, 0x12, 0x47, 0x6e, 0xe8, 0x4c, 0x63, 0xea, 0x91, 0x24, 0x09, 0xa2, 0xb1, 0xbc, 0xfc, 0x72,
	0xb1, 0xec, 0x64, 0xe7, 0xc3, 0xfc, 0x98, 0x8f, 0x81, 0x6e, 0xc0, 0x56, 0x8f, 0x30, 0xf1, 0x2a,
	0x64, 0xaa, 0xdb, 0x0b, 0xaa, 0x6f, 0x7a, 0x4e, 0x52, 0x96, 0xfe, 0x0e, 0xd4, 0x59, 0x88, 0x54,
	0xc4, 0xab, 0xec, 0xfd, 0x2a, 0xdc, 0xfa, 0x22, 0x49, 0x92, 0xfe, 0x13, 0x6c, 0xcb, 0x9d, 0x97,
	0xea, 0x9a, 0xb5, 0x5f, 0x6e, 0xc7, 0xbb, 0xdb, 0x2f, 0x79, 0xe8, 0x31, 0x28, 0xb1, 0x74, 0xa6,
	0xb1, 0x10, 0xae, 0xe0, 0x19, 0x80, 0x1e, 0xc2, 0x46, 0x44, 0x9d, 0x84, 0x84, 0x61, 0xfa, 0x21,
	0xca, 0x11, 0xb5, 0x49, 0x18, 0xea, 0xc7, 0xf0, 0x60, 0x3e, 0xff, 0xb5, 0x6f, 0x91, 0xed, 0xe7,
	0xbb, 0x4a, 0xc8, 0x88, 0xfa, 0x0f, 0xd0, 0x90, 0xc1, 0x84, 0xc2, 0x59, 0x4f, 0xaf, 0x49, 0xb9,
	0xb1, 0xa7, 0xa9, 0x90, 0x1d, 0x28, 0xc7, 0x84, 0xaf, 0xbc, 0xf4, 0x22, 0xa5, 0x96, 0x7e, 0x00,
	0x68, 0x3e, 0x78, 0x5a, 0xe6, 0x9b, 0xc5, 0x32, 0x6f, 0x0a, 0x9f, 0x17, 0xd9, 0x01, 0xd5, 0xf0,
	0xfd, 0xeb, 0xed, 0x7e, 0x0d, 0x65, 0x46, 0xf9, 0x73, 0x75, 0xa7, 0xd6, 0x12, 0xa3, 0x86, 0xcf,
	0x83, 0x34, 0xe6, 0x82, 0xa4, 0xb5, 0xb4, 0xa1, 0x24, 0x5f, 0xbc, 0xe2, 0x5d, 0x41, 0x04, 0x4d,
	0x7f, 0x0c, 0xcd, 0x7c, 0x08, 0x66, 0xff, 0x69, 0x4a, 0x6b, 0xd2, 0xdf, 0xc1, 0xa3, 0x95, 0xa7,
	0x69, 0xb2, 0x3d, 0xa8, 0x05, 0x51, 0xc2, 0xdc, 0xc8, 0x23, 0x4e, 0x90, 0x0e, 0x4c, 0x09, 0x57,
	0x33, 0xec, 0xc8, 0x4f, 0xf4, 0xff, 0xc3, 0x76, 0x97, 0x84, 0x64, 0xf1, 0x6e, 0x3d, 0x85, 0xea,
	0x9c, 0xa7, 0x50, 0x5c, 0xc2, 0x30, 0x73, 0xd4, 0x77, 0xe0, 0xfe, 0x75, 0x3f, 0x99, 0xf2, 0x65,
	0x0c, 0x4a, 0xfe, 0x28, 0x5c, 0x5f, 0xc6, 0x08, 0xea, 0x03, 0xcb, 0xe9, 0x59, 0x46, 0xdf, 0x39,
	0xb0, 0xfa, 0x5d, 0x13, 0xab, 0x05, 0xf4, 0x00, 0x1a, 0x03, 0xd3, 0xec, 0xda, 0x8e, 0x3d, 0xb2,
	0x3a, 0xc7, 0x4e, 0xe7, 0xd0, 0xec, 0x1c, 0xab, 0x45, 0xbe, 0x4c, 0x25, 0x9c, 0xee, 0x9f, 0x75,
	0xb1, 0x8e, 0x04, 0x82, 0x8f, 0x86, 0x6a, 0x89, 0xef, 0x56, 0xa3, 0xdf, 0x77, 0x7a, 0x96, 0xd5,
	0x55, 0xd7, 0xf6, 0x7f, 0x2b, 0xc1, 0xc3, 0xc5, 0x1e, 0xd8, 0x24, 0xbe, 0x08, 0x3c, 0x82, 0x3e,
	0x02, 0xcc, 0x96, 0x08, 0x7a, 0xb6, 0xdc, 0xee, 0xa5, 0xb5, 0xd6, 0x7c, 0x7e, 0x3b, 0x49, 0x0a,
	0xd5, 0xef, 0x21, 0x1b, 0x2a, 0xd9, 0x60, 0xa3, 0xbd, 0x95, 0x3e, 0xf3, 0x7b, 0xa3, 0xa9, 0xdf,
	0x46, 0xc9, 0x83, 0xfe, 0x08, 0xb5, 0xf9, 0x59, 0x43, 0xff, 0x5e, 0xf6, 0x5a, 0xb1, 0x0b, 0x9a,
	0xff, 0xb9, 0x9d, 0x36, 0x9f, 0xe1, 0x23, 0xc0, 0x6c, 0x46, 0x56, 0x75, 0x64, 0x69, 0x3c, 0x57,
	0x75, 0x64, 0x79, 0xcc, 0xf4, 0x7b, 0xe8, 0x7b, 0x50, 0xf2, 0x1b, 0x8f, 0x56, 0xe8, 0x5d, 0x9c,
	0xa9, 0xe6, 0xb3, 0x5b, 0x39, 0x79, 0x5c, 0x06, 0xdb, 0x2b, 0xae, 0x39, 0x7a, 0x75, 0xcb, 0x87,
	0x5a, 0x9a, 0x95, 0xe6, 0x7f, 0xff, 0x22, 0x3b, 0xcf, 0xea, 0x40, 0x6d, 0xfe, 0x8a, 0xaf, 0xfa,
	0x14, 0x2b, 0x46, 0xa7, 0xf9, 0xe2, 0x2e, 0x5a, 0x96, 0xe0, 0x53, 0x59, 0xfc, 0x55, 0xf4, 0xf6,
	0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0xdd, 0x37, 0xdc, 0x74, 0x0d, 0x00, 0x00,
}
